pipeline {
    agent any

    environment {
        dockerImage = 'ghfranjabour/lab1_big_data_infrastructure:latest'
        dockerhubCredentialsId = 'docker_cred'
    }
    options {
        timestamps()
        skipDefaultCheckout(true)
	}
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/ghfranj/Big-Data-Infrastructure-2024-Lab1.git'
            }
        }
        stage('Deploy') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', dockerhubCredentialsId) {
                        docker.image(dockerImage).pull()
                    }
                }
            }
        }
        stage('Functional testing') {
            steps {
                script {
                    def workspaceDir = env.WORKSPACE
                    docker.image(dockerImage).run("--rm -v ${workspaceDir}/src:/app/src"," python -m unittest src.test_unit.test_process_data && python -m unittest src.test_unit.test_classifier")
                }
            }
        }
    }
}
